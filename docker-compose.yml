services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.2
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      # The Schema Registry's own listener
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      # Point it to the internal Kafka broker
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      # Name of the internal topic used by Schema Registry
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas

  kafka-init:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: [ "sh", "-c",
      "
      echo 'Kafka is healthy! Creating topics...';
      kafka-topics --create --if-not-exists --topic train-locations --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1 && \
      kafka-topics --create --if-not-exists --topic train-speed-averages --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 && \
      echo 'Topics created successfully.'
      "
    ]

  dashboard-consumer:
    build:
      context: ./workshop-kafka-train-consumer-dashboard
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}"

  producer:
    build:
      context: ./workshop-kafka-train-producer
    depends_on:
      kafka-init:
        condition: service_completed_successfully
    logging:
      driver: "json-file"
      options:
        tag: "{{.Name}}"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8099:8080
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - ./kafka-ui-config/config.yml:/etc/kafkaui/dynamic_config.yaml